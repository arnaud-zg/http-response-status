// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getHttpStatusName get name when httpStatusCode is equal to 100 1`] = `"CONTINUE"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 101 1`] = `"SWITCHING_PROTOCOLS"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 102 1`] = `"PROCESSING"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 200 1`] = `"OK"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 201 1`] = `"CREATED"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 202 1`] = `"ACCEPTED"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 203 1`] = `"NON_AUTHORITATIVE_INFORMATION"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 204 1`] = `"NO_CONTENT"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 205 1`] = `"RESET_CONTENT"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 206 1`] = `"PARTIAL_CONTENT"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 207 1`] = `"MULTI_STATUS"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 208 1`] = `"ALREADY_REPORTED"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 226 1`] = `"IM_USED"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 300 1`] = `"MULTIPLE_CHOICES"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 301 1`] = `"MOVED_PERMANENTLY"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 302 1`] = `"FOUND"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 303 1`] = `"SEE_OTHER"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 304 1`] = `"NOT_MODIFIED"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 305 1`] = `"USE_PROXY"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 307 1`] = `"TEMPORARY_REDIRECT"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 308 1`] = `"PERMANENT_REDIRECT"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 400 1`] = `"BAD_REQUEST"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 401 1`] = `"UNAUTHORIZED"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 402 1`] = `"PAYMENT_REQUIRED"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 404 1`] = `"NOT_FOUND"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 405 1`] = `"METHOD_NOT_ALLOWED"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 405 2`] = `"METHOD_NOT_ALLOWED"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 406 1`] = `"NOT_ACCEPTABLE"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 407 1`] = `"PROXY_AUTHENTICATION_REQUIRED"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 408 1`] = `"REQUEST_TIMEOUT"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 409 1`] = `"CONFLICT"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 410 1`] = `"GONE"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 411 1`] = `"LENGTH_REQUIRED"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 412 1`] = `"PRECONDITION_FAILED"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 413 1`] = `"PAYLOAD_TOO_LARGE"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 414 1`] = `"REQUEST_URI_TOO_LONG"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 415 1`] = `"UNSUPPORTED_MEDIA_TYPE"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 416 1`] = `"REQUESTED_RANGE_NOT_SATISFIABLE"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 417 1`] = `"EXPECTATION_FAILED"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 418 1`] = `"I_M_A_TEAPOT"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 421 1`] = `"MISDIRECTED_REQUEST"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 422 1`] = `"UNPROCESSABLE_ENTITY"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 423 1`] = `"LOCKED"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 424 1`] = `"FAILED_DEPENDENCY"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 426 1`] = `"UPGRADE_REQUIRED"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 428 1`] = `"PRECONDITION_REQUIRED"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 429 1`] = `"TOO_MANY_REQUESTS"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 431 1`] = `"REQUEST_HEADER_FIELDS_TOO_LARGE"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 444 1`] = `"CONNECTION_CLOSED_WITHOUT_RESPONSE"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 451 1`] = `"UNAVAILABLE_FOR_LEGAL_REASONS"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 499 1`] = `"CLIENT_CLOSED_REQUEST"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 500 1`] = `"INTERNAL_SERVER_ERROR"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 501 1`] = `"NOT_IMPLEMENTED"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 502 1`] = `"BAD_GATEWAY"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 503 1`] = `"SERVICE_UNAVAILABLE"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 504 1`] = `"GATEWAY_TIMEOUT"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 505 1`] = `"HTTP_VERSION_NOT_SUPPORTED"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 506 1`] = `"VARIANT_ALSO_NEGOTIATES"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 507 1`] = `"INSUFFICIENT_STORAGE"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 508 1`] = `"LOOP_DETECTED"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 510 1`] = `"NOT_EXTENDED"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 511 1`] = `"NETWORK_AUTHENTICATION_REQUIRED"`;

exports[`getHttpStatusName get name when httpStatusCode is equal to 599 1`] = `"NETWORK_CONNECT_TIMEOUT_ERROR"`;
